{"version":3,"sources":["pages/Projects/GenerativeArt/Wave/Wave.module.css","pages/Projects/GenerativeArt/Wave/Wave.js"],"names":["module","exports","iw","ih","Wave","props","canv","useRef","useLayoutEffect","canvas","current","ctx","getContext","resizeHandler","getBoundingClientRect","width","height","animationFrameId","wave","y","length","amplitude","frequency","randomEvery","counter","window","addEventListener","increment","animate","beginPath","moveTo","strokeStyle","i","lineTo","Math","sin","stroke","fillRect","fillStyle","requestAnimationFrame","cancelAnimationFrame","removeEventListener","className","classes","Canvas","ref"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,OAAS,uB,iCCD3B,WAIIC,EACAC,EALJ,gCAmEeC,UA3DF,SAAAC,GACT,IAAMC,EAAOC,mBAuDb,OArDAC,2BAAgB,WACZ,IAAMC,EAASH,EAAKI,QACdC,EAAMF,EAAOG,WAAW,MAExBC,EAAgB,WAClBX,EAAKO,EAAOK,wBAAwBC,MACpCZ,EAAKM,EAAOK,wBAAwBE,OAEpCP,EAAOM,MAAQb,EACfO,EAAOO,OAASb,GAEpBU,IAEA,IAWII,EAXEC,EAAO,CACTC,EAAGV,EAAOO,OAAS,EACnBI,OAAQ,IACRC,UAAW,IACXC,UAAW,GACXC,YAAa,IACbC,QAAS,GAGbC,OAAOC,iBAAiB,SAAUb,GAIlC,IAAIc,EAAYT,EAAKI,UAsBrB,OArBA,SAASM,IACLjB,EAAIkB,YACJlB,EAAImB,OAAO,EAAGrB,EAAOO,OAAO,GAC5BL,EAAIoB,YAAc,mBAGlB,IAAI,IAAIC,EAAI,EAAGA,EAAI9B,EAAI8B,IACnBrB,EAAIsB,OAAOD,EAAGd,EAAKC,EAAIe,KAAKC,IAAIH,EAAId,EAAKE,OAASO,GAAaT,EAAKG,UAAYa,KAAKC,IAAIR,IAG7FhB,EAAIyB,SAEJT,GAAa,IACbhB,EAAI0B,SAAS,EAAE,EAAEnC,EAAGC,GACpBQ,EAAI2B,UAAY,kBAEhBpB,EAAKM,UACLP,EAAmBsB,sBAAsBX,GAE7CA,GAEO,WACHH,OAAOe,qBAAqBvB,GAC5BQ,OAAOgB,oBAAoB,SAAU5B,MAE1C,IACI,wBAAQ6B,UAAWC,IAAQC,OAAQC,IAAKvC","file":"static/js/6.4e789be5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Wave_Canvas__1xnlf\"};","import {useRef, useLayoutEffect} from 'react';\r\n\r\nimport classes from './Wave.module.css';\r\n\r\nlet iw;\r\nlet ih;\r\n\r\n\r\nconst Wave = props => {\r\n    const canv = useRef();\r\n\r\n    useLayoutEffect(() => {\r\n        const canvas = canv.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const resizeHandler = () => {\r\n            iw = canvas.getBoundingClientRect().width;\r\n            ih = canvas.getBoundingClientRect().height;\r\n\r\n            canvas.width = iw;\r\n            canvas.height = ih;\r\n        }\r\n        resizeHandler();\r\n\r\n        const wave = {\r\n            y: canvas.height / 2,\r\n            length: 0.01,\r\n            amplitude: 100,\r\n            frequency: 0.1,\r\n            randomEvery: 100,\r\n            counter: 0\r\n        }\r\n\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        let animationFrameId;\r\n\r\n        let increment = wave.frequency;\r\n        function animate() {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, canvas.height/2);\r\n            ctx.strokeStyle = 'hsl(0, 50%, 50%)';\r\n\r\n\r\n            for(let i = 0; i < iw; i++) {\r\n                ctx.lineTo(i, wave.y + Math.sin(i * wave.length + increment) * wave.amplitude * Math.sin(increment));\r\n            }\r\n\r\n            ctx.stroke();\r\n\r\n            increment += 0.02;\r\n            ctx.fillRect(0,0,iw,ih);\r\n            ctx.fillStyle = 'rgba(0,0,0,0.05';\r\n\r\n            wave.counter ++;\r\n            animationFrameId = requestAnimationFrame(animate);\r\n        }\r\n        animate();\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n            window.removeEventListener('resize', resizeHandler);\r\n        }\r\n    }, []);\r\n    return <canvas className={classes.Canvas} ref={canv} />\r\n}\r\n\r\nexport default Wave;"],"sourceRoot":""}